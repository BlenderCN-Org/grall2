//--- White ---------------------------------------------------------------------------
fragment_program BaseWhite_fp cg
{
    source Base.cg
    entry_point BaseWhite_fp
    profiles ps_2_0 arbfp1
}

// for inversion use:
//
// pass
// {
//         fragment_program_ref BaseWhite_fp
//         {
//         }
// 
//         scene_blend one one
//         scene_blend_op subtract
// }

//--- Ambient -------------------------------------------------------------------------
vertex_program BaseAmbient_vp cg
{
        source Base.cg

        default_params
        {
                param_named_auto worldViewProj worldviewproj_matrix
                param_named_auto world world_matrix
                param_named_auto textureMat texture_matrix 0
        } 

        entry_point BaseAmbient_vp
        profiles vs_1_1 arbvp1
}
fragment_program BaseAmbient_fp cg
{
        source Base.cg 

        default_params
        {
                param_named_auto matAmbient surface_ambient_colour
                param_named_auto lightAmbient ambient_light_colour
        } 

        entry_point BaseAmbient_fp
        profiles ps_2_0 arbfp1
} 

vertex_program BaseAmbientNormalMapParallax_vp cg
{
        source Base.cg
        compile_arguments -DNORMAL_MAPPING=1 -DPARALLAX_MAPPING=1

        default_params
        {
                param_named_auto eyePosition camera_position_object_space
                param_named_auto world world_matrix
                param_named_auto textureMat texture_matrix 0
                param_named_auto worldViewProj worldviewproj_matrix
        } 

        entry_point BaseAmbient_vp
        profiles vs_1_1 arbvp1
}
fragment_program BaseAmbientNormalMapParallax_fp cg
{
        source Base.cg 
        compile_arguments -DNORMAL_MAPPING=1 -DPARALLAX_MAPPING=1

        default_params
        {
                param_named_auto matAmbient surface_ambient_colour
                param_named_auto lightAmbient ambient_light_colour
                param_named scaleBias float4 0.04 0.02
        } 

        entry_point BaseAmbient_fp
        profiles ps_2_0 arbfp1
} 

//--- Per-light -----------------------------------------------------------------------
vertex_program BasePerLight_vp cg
{
        source Base.cg
        compile_arguments

        default_params
        {
                param_named_auto eyePosition camera_position_object_space
                param_named_auto worldViewProj worldviewproj_matrix
                param_named_auto world world_matrix
                param_named_auto textureMat texture_matrix 0
                param_named_auto twvp0 texture_worldviewproj_matrix 0
                param_named_auto twvp1 texture_worldviewproj_matrix 1
                param_named_auto twvp2 texture_worldviewproj_matrix 2

                param_named_auto lightPosition light_position_object_space 0
                param_named_auto spotlightDir light_direction_object_space 0
        } 

        entry_point BasePerLight_vp
        profiles vs_1_1 arbvp1
}
fragment_program BasePerLight_fp cg
{
        source Base.cg 
        compile_arguments

        default_params
        {
                param_named_auto matDiffuse surface_diffuse_colour
                param_named_auto matSpecular surface_specular_colour

                param_named_auto lightDiffuse light_diffuse_colour 0
                param_named_auto lightSpecular light_specular_colour 0
                param_named_auto lightAtten light_attenuation 0
                param_named_auto spotlightParams spotlight_params 0
                param_named_auto lightPosition light_position 0

                //param_named_auto invShadowMapSize0 inverse_texture_size 2
                //param_named_auto invShadowMapSize1 inverse_texture_size 3
                //param_named_auto invShadowMapSize2 inverse_texture_size 4

                param_named exponent float 127
        } 

        entry_point BasePerLight_fp
        profiles ps_2_0 arbfp1
} 

vertex_program BasePerLightNormalMap_vp cg
{
        source Base.cg
        compile_arguments -DNORMAL_MAPPING=1

        default_params
        {
                param_named_auto eyePosition camera_position_object_space
                param_named_auto worldViewProj worldviewproj_matrix
                param_named_auto world world_matrix
                param_named_auto textureMat texture_matrix 0
                param_named_auto twvp0 texture_worldviewproj_matrix 0
                param_named_auto twvp1 texture_worldviewproj_matrix 1
                param_named_auto twvp2 texture_worldviewproj_matrix 2

                param_named_auto lightPosition light_position_object_space 0
                param_named_auto spotlightDir light_direction_object_space 0
        } 

        entry_point BasePerLight_vp
        profiles vs_1_1 arbvp1
}
fragment_program BasePerLightNormalMap_fp cg
{
        source Base.cg 
        compile_arguments -DNORMAL_MAPPING=1

        default_params
        {
                param_named_auto matDiffuse surface_diffuse_colour
                param_named_auto matSpecular surface_specular_colour

                param_named_auto lightDiffuse light_diffuse_colour 0
                param_named_auto lightSpecular light_specular_colour 0
                param_named_auto lightAtten light_attenuation 0
                param_named_auto spotlightParams spotlight_params 0
                param_named_auto lightPosition light_position 0

                //param_named_auto invShadowMapSize0 inverse_texture_size 2
                //param_named_auto invShadowMapSize1 inverse_texture_size 3
                //param_named_auto invShadowMapSize2 inverse_texture_size 4

                param_named exponent float 127
        } 

        entry_point BasePerLight_fp
        profiles ps_2_0 arbfp1
} 

vertex_program BasePerLightNormalMapParallax_vp cg
{
        source Base.cg
        compile_arguments -DNORMAL_MAPPING=1 -DPARALLAX_MAPPING=1

        default_params
        {
                param_named_auto eyePosition camera_position_object_space
                param_named_auto worldViewProj worldviewproj_matrix
                param_named_auto world world_matrix
                param_named_auto textureMat texture_matrix 0
                param_named_auto twvp0 texture_worldviewproj_matrix 0
                param_named_auto twvp1 texture_worldviewproj_matrix 1
                param_named_auto twvp2 texture_worldviewproj_matrix 2

                param_named_auto lightPosition light_position_object_space 0
                param_named_auto spotlightDir light_direction_object_space 0
        } 

        entry_point BasePerLight_vp
        profiles vs_1_1 arbvp1
}
fragment_program BasePerLightNormalMapParallax_fp cg
{
        source Base.cg 
        compile_arguments -DNORMAL_MAPPING=1 -DPARALLAX_MAPPING=1

        default_params
        {
                param_named_auto matDiffuse surface_diffuse_colour
                param_named_auto matSpecular surface_specular_colour

                param_named_auto lightDiffuse light_diffuse_colour 0
                param_named_auto lightSpecular light_specular_colour 0
                param_named_auto lightAtten light_attenuation 0
                param_named_auto spotlightParams spotlight_params 0
                param_named_auto lightPosition light_position 0

                //param_named_auto invShadowMapSize0 inverse_texture_size 2
                //param_named_auto invShadowMapSize1 inverse_texture_size 3
                //param_named_auto invShadowMapSize2 inverse_texture_size 4

                param_named exponent float 127
        } 

        entry_point BasePerLight_fp
        profiles ps_2_0 arbfp1
} 

//--- Basic ---------------------------------------------------------------------------

scene_blend alpha_blend
depth_write off

// abstract one-time ambient pass that is run before the per-light passes
abstract pass Pass/Ambient
{
        ambient $ambient
        scene_blend $scene_blend
        depth_write $depth_write
        
        vertex_program_ref BaseAmbient_vp { }   
        fragment_program_ref BaseAmbient_fp { } 
        
        texture_unit DiffuseMap
        {
                texture $diffuse_tex
        }
}

// abstract per-light pass that is run once for each light, effects can be filled in
// later
abstract pass Pass/PerLight
{
        max_lights 12
        scene_blend add
        iteration once_per_light

        diffuse $diffuse
        specular $specular

        vertex_program_ref BasePerLight_vp { }   
        fragment_program_ref BasePerLight_fp { } 
        
        texture_unit DiffuseMap
        {
                texture $diffuse_tex
        }

        texture_unit NormalMap
        {
                texture $normal_tex
        }
        
        texture_unit ShadowMap0
        {
                content_type shadow
                tex_address_mode clamp
                filtering anisotropic
                max_anisotropy 16
        }

        texture_unit ShadowMap1
        {
                content_type shadow
                tex_address_mode clamp
                filtering anisotropic
                max_anisotropy 16
        }

        texture_unit ShadowMap2
        {
                content_type shadow
                tex_address_mode clamp
                filtering anisotropic
                max_anisotropy 16
        }
}  

// the basic lighting technique for far away LOD, skip normal mapping, parallax
// mapping, etc.
abstract technique Technique/FarLOD
{
        pass Ambient : Pass/Ambient { }
        pass PerLight : Pass/PerLight { }
}

// fallback technique to use when no shaders are available, doesn't look particularly
// cool
abstract technique Technique/Fallback
{ 
        pass
        {
                ambient $ambient
                diffuse $diffuse
                specular $specular
                scene_blend $scene_blend
                depth_write $depth_write
                
                texture_unit DiffuseMap
                {
                        texture $diffuse_tex
                }
        }
}  

// basic material
material Base
{ 
        receive_shadows on

        set $diffuse_tex "Player.png"
        set $normal_tex "Plain_NM.png"

        set $ambient "0.8 0.8 0.8 1"
        set $diffuse "0.9 0.9 0.9 1"
        set $specular "0.9 0.9 0.9 1"

        set $scene_blend "one zero"
        set $depth_write "on"

        technique Shaders1 : Technique/FarLOD { }  
        technique Fallback : Technique/Fallback { }
}

// Base + normal mapping, fall back to Base far away
material BaseNormalMap : Base
{
        lod_values 30

        technique Shaders1
        { 
                lod_index 0
                pass Ambient : Pass/Ambient
                {
                        texture_unit NormalMap
                        {
                                texture $normal_tex
                        }
                }
                pass PerLight : Pass/PerLight
                {
                        vertex_program_ref BasePerLightNormalMap_vp { }   
                        fragment_program_ref BasePerLightNormalMap_fp { } 
        
                        texture_unit NormalMap
                        {
                                texture $normal_tex
                        }
                }  
        }  
        technique Shaders2 : Technique/FarLOD
        { 
                lod_index 1
        }  
}

// BaseNormalMap + parallax mapping, fall back to Base far away
material BaseNormalMapParallax : BaseNormalMap
{
        set $scaleBias "0.04 0.02"

        technique Shaders1
        { 
                pass Ambient : Pass/Ambient
                {
                        vertex_program_ref BaseAmbientNormalMapParallax_vp { }   
                        fragment_program_ref BaseAmbientNormalMapParallax_fp
                        { 
                                param_named scaleBias float4 $scaleBias 0 1 
                        } 
                }
                pass PerLight : Pass/PerLight
                {
                        vertex_program_ref BasePerLightNormalMapParallax_vp { }   
                        fragment_program_ref BasePerLightNormalMapParallax_fp
                        { 
                                param_named scaleBias float4 $scaleBias 0 1 
                        } 
                }  
        }
}

//--- Glow ----------------------------------------------------------------------------

// add a technique that under Scheme/Glow (used by the Glow compositor) renders the 
// glow texture, which shows up in the glow buffer

abstract technique Technique/Glow
{
        scheme Scheme/Glow
        pass
        {
                ambient $glow_amount $glow_amount $glow_amount 1
                
                vertex_program_ref BaseAmbient_vp { }   
                fragment_program_ref BaseAmbient_fp { } 
                
                texture_unit GlowMap
                {
                        texture $glow_tex
                }
        }
}

material BaseGlow : Base
{ 
        set $glow_amount "0.7"
        set $glow_tex "Black.png"

        technique Glow : Technique/Glow { }
}
material BaseNormalMapGlow : BaseNormalMap
{ 
        set $glow_amount "0.7"
        set $glow_tex "Black.png"

        technique Glow : Technique/Glow { }
}
material BaseNormalMapParallaxGlow : BaseNormalMapParallax
{ 
        set $glow_amount "0.7"
        set $glow_tex "Black.png"

        technique Glow : Technique/Glow { }
}

//--- Transparent ---------------------------------------------------------------------

// use alpha_blend on the ambient shader and the fallback technique, and also don't 
// render anything to the Glow buffer (as opposed to the default black) so that things 
// can glow through transparent objects

material BaseTransparent : Base
{ 
        set $scene_blend "alpha_blend"
        set $depth_write "off"

        technique Glow
        { 
                scheme Scheme/Glow
        }  
}


