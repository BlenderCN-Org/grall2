uniform sampler2D scene: register(s0);

static const float samples[10] =
{
    -0.08,
    -0.05,
    -0.03,
    -0.02,
    -0.01,
    0.01,
    0.02,
    0.03,
    0.05,
    0.08
};

float4 Dimension2_fp
    (
         float2 texCoord: TEXCOORD0
    ) : COLOR
{
    //Direction (from center), distance and normalise direction.
    float2 dir = 0.5 - texCoord;
    float dist = length(dir.xy);
    dir = normalize(dir);

    //Main colour.
    float4 colour = tex2D(scene, texCoord);

    //Find average along direction. We start with main colour, then add all.
    float4 avg = colour;
    for (int i = 0; i < 10; i++)
    {
        //Take colour at each point along line, referring to the sample list.
        float4 res = tex2D(scene, texCoord + dir * samples[i] * 0.5);
        avg += res;
    }
    //11 samples (including main).
    avg /= 11;

    //Amount of blur to mix.
    float amount = saturate(dist * 2.2);

    //Blend the original color with the averaged pixels, invert and darken.
    return (1 - lerp(colour, avg, amount)) * 0.8;
}
