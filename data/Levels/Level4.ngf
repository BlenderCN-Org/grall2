ngflevel Level4
{
	object
	{
		type Light
		name noname
		position 6.500000 5.500000 -11.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			lightType point
			colour 0.9 0.9 0.9
			attenuation 70 1 0.3 0.2
		}
	}
	object
	{
		type Light
		name noname
		position 12.500000 5.500000 -11.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			lightType point
			colour 0.9 0.9 0.9
			attenuation 70 1 0.3 0.2
		}
	}
	object
	{
		type Light
		name noname
		position 12.500000 5.500000 -3.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			lightType point
			colour 0.9 0.9 0.9
			attenuation 70 1 0.3 0.2
		}
	}
	object
	{
		type Light
		name noname
		position 6.500000 5.500000 -3.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			lightType point
			colour 0.9 0.9 0.9
			attenuation 70 1 0.3 0.2
		}
	}
	object
	{
		type Light
		name noname
		position -5.500000 3.500000 -7.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			lightType point
			colour 0.9 0.3 0.1
			attenuation 70 1 0.2 0.02
		}
	}
	object
	{
		type Director
		name noname
		position 5.000000 2.500000 0.500000
		rotation 0.000000 0.000000 1.000000 -0.000000

		properties
		{
			dimensions 3
			speed -1
		}
	}
	object
	{
		type StaticBrush
		name noname
		position 8.500000 3.000000 -11.000000
		rotation 0.707107 0.000000 -0.707107 -0.000000

		properties
		{
			dimensions 2
			brushMeshFile Level4_b0.mesh
			convex yes
		}
	}
	object
	{
		type Trigger
		name noname
		position -2.059093 0.600000 -7.469171
		rotation 0.707107 0.000000 -0.707107 -0.000000

		properties
		{
			dimensions 3
			brushMeshFile Level4_b1.mesh
			script : import Ngf
			       : 
			       : def collide(self, other):
			       : 	if (other.hasFlag("Player")):
			       : 		Ngf.getObject("turret1").disable()
			       : 		Ngf.destroyObject(self)
		}
	}
	object
	{
		type Crate
		name noname
		position -6.500000 0.750000 7.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			heightDeficiency 0
		}
	}
	object
	{
		type Controller
		name noname
		position 0.000000 -6.500000 -0.000000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 1
			script : import Ngf
			       : import GraLL2
			       : 
			       : def levelStart(self):
			       : 	#Set the initially viewed dimension.
			       : 	GraLL2.setDimension(1)
			       : 	
			       : 	#Set the bonus time for this level.
			       : 	GraLL2.setBonusTime(0)
			       : 	
			       : 	#Show the white text with the level number
			       : 	#and caption.
			       : 	self.showLevelText(2,4,3)
			       : 	pass
			       : 
			       : def levelStop(self):
			       : 	pass
			       : 
			       : def winLevel(self):
			       : 	pass
			       : 
			       : def loseLevel(self):
			       : 	pass
		}
	}
	object
	{
		type StaticBrush
		name noname
		position -0.500000 0.500000 0.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			brushMeshFile Level4_b2.mesh
			convex no
		}
	}
	object
	{
		type Player
		name player1
		position -5.499782 0.389544 11.500729
		rotation 1.000000 0.000000 0.000000 -0.000000
	}
	object
	{
		type SlidingBrush
		name noname
		position -5.500000 0.500000 3.500000
		rotation 0.707107 0.000000 0.707107 -0.000000

		properties
		{
			dimensions 3
			enabled yes
			speed 1
			distance 2.9
			ignoreCollisions no
			brushMeshFile Level4_b3.mesh
			repeat yes
			condition other.hasDecPickup("KeyR")
			autoClose no
			script : #Door Prefab Script
			       : #------------------
			       : 
			       : #This is a generic door. It is not bound to any particular opening
			       : #condition, it could open based on anything (does he have a key?
			       : #is he moving fast? has some time elapsed? is some switch somewhere
			       : #on? etc.).
			       : 
			       : #The non-SlidingBrush properties are as follows:-
			       : #
			       : # repeat    - Whether the door can be opened multiple times
			       : #
			       : # condition - The Python code condition which is checked. It
			       : #             must evaluate to a True/False value.
			       : #
			       : # autoClose - Whether the door closes automatically after a
			       : #             a delay after opening.
			       : 
			       : #The 'condition' code is run in collide-function scope. An example
			       : #condition is, "other.hasFlag("Player")".
			       : 
			       : import Ngf
			       : 
			       : def create(self):
			       : 	#Not opened yet!
			       : 	self.m_opened = False
			       : 	
			       : 	#We're not moving yet!
			       : 	self.m_moving = False
			       : 	
			       : 	#Save some properties.
			       : 	self.m_repeat = (self.getProperty("repeat", 0, "yes") == "yes")
			       : 	self.m_autoClose = (self.getProperty("autoClose", 0, "yes") == "yes")
			       : 	self.m_condition = self.getProperty("condition", 0, "True")
			       : 	
			       : def collide(self, other):
			       : 	#If we're already moving, then nothing to check.
			       : 	#If we're repeating, then do it. If we're not repeating, this
			       : 	#must be first time. Also, the other object must be a 'Doorer'.
			       : 	#Lastly, we check for the 'condition' (evaluate Python string)
			       : 	#and if it's fine, then continue.
			       : 	if ((not self.m_moving) and (self.m_repeat or (not self.m_opened)) and other.hasFlag("Doorer")):
			       : 		if (eval(self.m_condition)):
			       : 			self.p_forward = True
			       : 			self.m_opened = True
			       : 			self.m_moving = True
			       : 
			       : def point(self, n):
			       : 	#We've hit the start point, so we've stopped moving.
			       : 	if (n == 0):
			       : 		self.m_moving = False
			       : 	#If we're auto-closing, we close after a small delay after
			       : 	#reaching end point.
			       : 	if (self.m_autoClose and (n == 1)):
			       : 		self.setAlarm(1, 0)
			       : 		
			       : def alarm(self, n):
			       : 	#Delay is over, close.
			       : 	if (n == 0):
			       : 		self.p_forward = False
		}
	}
	object
	{
		type Pickup
		name noname
		position -2.500000 0.500000 4.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			pickupType KeyR
			meshFile Mesh_Key.mesh
			material Objects/KeyR
			spin 0.2
			bob 0.2
		}
	}
	object
	{
		type Bomb
		name noname
		position -2.500000 0.500000 5.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			green yes
		}
	}
	object
	{
		type Crate
		name noname
		position -4.500000 0.750000 8.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			heightDeficiency 0
		}
	}
	object
	{
		type Turret
		name turret1
		position -5.500000 0.500000 -7.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			initTime 0
			initScan no
			alwaysScan no
			fireTime 5
			restTime 5
			radius 20
			enabled no
		}
	}
	object
	{
		type Trigger
		name noname
		position -5.500000 0.500000 0.230829
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			brushMeshFile Level4_b4.mesh
			script : import Ngf
			       : 
			       : def collide(self, other):
			       : 	if (other.hasFlag("Player")):
			       : 		Ngf.getObject("turret1").enable()
			       : 		Ngf.destroyObject(self)
		}
	}
	object
	{
		type StaticBrush
		name noname
		position 6.500000 3.000000 -9.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 1
			brushMeshFile Level4_b5.mesh
			convex yes
		}
	}
	object
	{
		type Switch
		name noname
		position 12.500000 1.750000 -11.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			switchType toggle
			script : import Ngf
			       : 
			       : def on(self):
			       : 	Ngf.getObject("mover1").p_enabled = True
			       : 	
			       : def off(self):
			       : 	Ngf.getObject("mover1").p_enabled = False
		}
	}
	object
	{
		type MovingBrush
		name mover1
		position 16.000000 2.500000 -12.500000
		rotation 0.000000 0.000000 1.000000 -0.000000

		properties
		{
			dimensions 3
			enabled no
			brushMeshFile Level4_b6.mesh
			speed 1
		}
	}
	object
	{
		type Director
		name noname
		position 16.000000 2.500000 0.500000
		rotation 0.707107 0.000000 0.707107 -0.000000

		properties
		{
			dimensions 3
			speed -1
		}
	}
	object
	{
		type Light
		name noname
		position -5.500000 3.500000 9.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			lightType point
			colour 0.8 0.5 0.1
			attenuation 70 1 0.2 0.02
		}
	}
}

