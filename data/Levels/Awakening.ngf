ngflevel Awakening
{
	object
	{
		type Trigger
		name noname
		position -7.800000 1.500000 -4.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			brushMeshFile Awakening_b0.mesh
			script : import GraLL2
			       : 
			       : def collide(self, other):
			       : 	if (other.hasFlag("Player")):
			       : 		GraLL2.showMessage("Watch your step!", 7)
			       : 		Ngf.destroyObject(self)
		}
	}
	object
	{
		type Trigger
		name noname
		position -7.800000 1.500000 -17.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			brushMeshFile Awakening_b1.mesh
			script : import GraLL2
			       : 
			       : def collide(self, other):
			       : 	if (other.hasFlag("Player")):
			       : 		GraLL2.showMessage("Roll into the yellow marker to complete the level.", 7)
			       : 		Ngf.destroyObject(self)
		}
	}
	object
	{
		type Trigger
		name noname
		position -7.800000 1.500000 3.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			brushMeshFile Awakening_b2.mesh
			script : import GraLL2
			       : 
			       : def collide(self, other):
			       : 	if (other.hasFlag("Player")):
			       : 		GraLL2.showMessage("%(l)s, %(r)s - Peek left/right\n%(l)s+%(r)s - Peek back" % { 'l' : GraLL2.getControl("peepLeft"), 'r' : GraLL2.getControl("peepRight")}, 7)
			       : 		Ngf.destroyObject(self)
		}
	}
	object
	{
		type StaticBrush
		name stopBrush
		position 9.618255 0.700000 11.500279
		rotation 0.707107 0.000000 -0.707107 -0.000000

		properties
		{
			dimensions 3
			brushMeshFile Awakening_b3.mesh
			convex yes
		}
	}
	object
	{
		type Point
		name camPoint11
		position 5.750585 3.971104 14.149936
		rotation 1.000000 0.000000 0.000000 -0.000000
	}
	object
	{
		type Point
		name camPoint10
		position 5.642491 3.844783 13.714734
		rotation 1.000000 0.000000 0.000000 -0.000000
	}
	object
	{
		type Point
		name camPoint9
		position 6.164166 1.987500 11.856307
		rotation 1.000000 0.000000 0.000000 -0.000000
	}
	object
	{
		type Point
		name camPoint8
		position 7.783031 1.468542 9.413078
		rotation 1.000000 0.000000 0.000000 -0.000000
	}
	object
	{
		type Point
		name camPoint7
		position 10.520341 1.345531 7.919816
		rotation 1.000000 0.000000 0.000000 -0.000000
	}
	object
	{
		type Point
		name camPoint6
		position 13.018146 1.210469 8.606950
		rotation 1.000000 0.000000 0.000000 -0.000000
	}
	object
	{
		type Point
		name camPoint5
		position 14.436822 1.222649 11.430520
		rotation 1.000000 0.000000 0.000000 -0.000000
	}
	object
	{
		type Point
		name camPoint4
		position 13.010715 1.326002 14.219269
		rotation 1.000000 0.000000 0.000000 -0.000000
	}
	object
	{
		type Point
		name camPoint3
		position 10.484399 1.406993 15.101520
		rotation 1.000000 0.000000 0.000000 -0.000000
	}
	object
	{
		type Point
		name camPoint2
		position 10.500000 3.086266 13.087982
		rotation 1.000000 0.000000 0.000000 -0.000000
	}
	object
	{
		type Light
		name noname
		position 3.500000 0.500000 4.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			lightType point
			colour 0.8 0.6 0.2
			attenuation 20 1 0.1 0.1
		}
	}
	object
	{
		type Light
		name noname
		position -0.954326 6.500000 -11.500000
		rotation 0.659379 0.659379 -0.255381 -0.255381

		properties
		{
			dimensions 3
			lightType spot
			colour 1 1 1
			attenuation 20 1 0.05 0.05
			innerAngle 10
			outerAngle 120
		}
	}
	object
	{
		type Light
		name noname
		position -10.000000 2.300000 -0.000000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			lightType point
			colour 0.2 0.3 0.6
			attenuation 10 1 0.1 0.1
		}
	}
	object
	{
		type Light
		name noname
		position -5.000000 2.300000 -0.000000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			lightType point
			colour 0.2 0.3 0.6
			attenuation 10 1 0.1 0.1
		}
	}
	object
	{
		type Light
		name noname
		position 3.500000 0.500000 18.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			lightType point
			colour 0.8 0.6 0.2
			attenuation 20 1 0.1 0.1
		}
	}
	object
	{
		type Light
		name noname
		position 17.500000 0.500000 18.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			lightType point
			colour 0.8 0.6 0.2
			attenuation 20 1 0.1 0.1
		}
	}
	object
	{
		type Light
		name noname
		position 17.500000 0.500000 4.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			lightType point
			colour 0.8 0.6 0.2
			attenuation 20 1 0.1 0.1
		}
	}
	object
	{
		type StaticBrush
		name noname
		position 11.500000 0.500000 11.500000
		rotation 0.707107 0.000000 0.707107 -0.000000

		properties
		{
			dimensions 3
			brushMeshFile Awakening_b4.mesh
			convex yes
		}
	}
	object
	{
		type StaticBrush
		name noname
		position 10.500000 0.500000 10.500000
		rotation -0.000000 0.000000 1.000000 -0.000000

		properties
		{
			dimensions 3
			brushMeshFile Awakening_b5.mesh
			convex yes
		}
	}
	object
	{
		type StaticBrush
		name noname
		position 9.500000 0.500000 12.500000
		rotation 0.707107 0.000000 -0.707107 -0.000000

		properties
		{
			dimensions 3
			brushMeshFile Awakening_b6.mesh
			convex yes
		}
	}
	object
	{
		type StaticBrush
		name noname
		position 9.500000 0.500000 10.500000
		rotation 0.707107 0.000000 -0.707107 -0.000000

		properties
		{
			dimensions 3
			brushMeshFile Awakening_b7.mesh
			convex yes
		}
	}
	object
	{
		type StaticBrush
		name noname
		position 11.500000 0.500000 12.500000
		rotation 0.707107 0.000000 -0.707107 -0.000000

		properties
		{
			dimensions 3
			brushMeshFile Awakening_b8.mesh
			convex yes
		}
	}
	object
	{
		type StaticBrush
		name noname
		position 10.500000 0.500000 12.500000
		rotation -0.000000 0.000000 1.000000 -0.000000

		properties
		{
			dimensions 3
			brushMeshFile Awakening_b9.mesh
			convex yes
		}
	}
	object
	{
		type StaticBrush
		name noname
		position 11.500000 0.500000 10.500000
		rotation 0.707107 0.000000 -0.707107 -0.000000

		properties
		{
			dimensions 3
			brushMeshFile Awakening_b10.mesh
			convex yes
		}
	}
	object
	{
		type Controller
		name noname
		position 0.000000 -5.500000 -0.000000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 1
			script : import Ngf
			       : import GraLL2
			       : 
			       : def levelStart(self):
			       : 	GraLL2.setDimension(1)
			       : 	GraLL2.setBonusTime(90)
			       : 	GraLL2.setUp(True)
			       : 	
			       : 	self.setAlarm(8.2, 0)
			       : 	
			       : 	GraLL2.fadeOutColour(Ngf.ColourValue(0,0,0), 5)
			       : 	
			       : def levelStop(self):
			       : 	pass
			       : 
			       : def winLevel(self):
			       : 	pass
			       : 
			       : def loseLevel(self):
			       : 	pass
			       : 
			       : def alarm(self, n):
			       : 	if (n == 0):
			       : 		self.showLevelText(2,4,3)
			       : 
		}
	}
	object
	{
		type StaticBrush
		name noname
		position 0.500000 1.500000 -0.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			brushMeshFile Awakening_b11.mesh
			convex no
		}
	}
	object
	{
		type Empty
		name noname
		position -7.500000 2.500000 -22.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			scriptFile Prefab_EndPoint.pyo
		}
	}
	object
	{
		type Player
		name player1
		position 10.500217 0.389544 11.500729
		rotation 0.707107 0.000000 0.707107 -0.000000

		properties
		{
			dimensions 3
			minHeight -4.0
			captureCameraHandler 0
			canSwitchDimensions 0
			script : import Ngf
			       : import random
			       : 
			       : def init(self):
			       : 	self.v_hitSound1 = GraLL2.createSound("Bang-2.wav", False, False)
			       : 	self.v_hitSound2 = GraLL2.createSound("Bang.wav", False, False)
			       : 	self.v_electricSound = GraLL2.createSound("ElectricSound.wav", False, False)
			       : 		
			       : 	self.v_hitSound2.setPitch(random.uniform(0.9, 1.1))
			       : 	self.v_hitSound2.setGain(1.4)
			       : 
			       : def create(self):
			       : 	self.lightOff()
			       : 	self.p_underControl = False
			       : 	self.m_numHits = 0
			       : 	self.m_pushDir = -1
			       : 	self.m_pushTime = 0
			       : 	self.m_colTime = 0
			       : 	
			       : 	self.setAlarm(GraLL2.controller.m_splineTime - 3.5, 6)
			       : 	self.setAlarm(GraLL2.controller.m_splineTime - 2, 0)
			       : 	self.setAlarm(GraLL2.controller.m_splineTime + 2, 2)
			       : 	
			       : 	Ngf.getObject("stopBrush").setVisible(False)
			       : 	
			       : 	self.v_electricSound.setPosition(self.getPosition())
			       : 	
			       : 	obj = Ngf.getObject("stopBrush")
			       : 	if (obj):
			       : 		self.v_hitSound1.setPosition(obj.getPosition())
			       : 		self.v_hitSound2.setPosition(obj.getPosition())
			       : 	
			       : 	self.m_save = False
			       : 	
			       : def destroy(self):
			       : 	GraLL2.destroySound(self.v_hitSound1)
			       : 	GraLL2.destroySound(self.v_hitSound2)
			       : 	GraLL2.destroySound(self.v_electricSound)
			       : 	
			       : def utick(self, elapsed):
			       : 	if (self.m_pushTime > 0):
			       : 		self.applyTorque(self.m_pushDir * Ngf.Vector3(0,0,-6))
			       : 		self.m_pushTime -= elapsed
			       : 		
			       : 	if (self.m_colTime > 0):
			       : 		self.m_colTime -= elapsed
			       : 		
			       : 	if (self.m_save):
			       : 		#We set 'no save' before saving, so that
			       : 		#we don't keep saving repeatedly (m_save is
			       : 		#saved as 'False'.
			       : 		self.m_save = False
			       : 		GraLL2.saveCheckpoint()
			       : 	
			       : def alarm(self, n):
			       : 	#Play that electric sound, flicker the light.
			       : 	if (n == 6):
			       : 		self.v_electricSound.play()
			       : 		self.setAlarm(0.3, 7)
			       : 	elif (n == 7):
			       : 		self.lightOn()
			       : 		self.setAlarm(0.07, 8)
			       : 	elif (n == 8):
			       : 		self.lightOff()
			       : 		self.setAlarm(0.15, 9)
			       : 	elif (n == 9):
			       : 		self.lightOn()
			       : 		self.setAlarm(0.12, 10)
			       : 	elif (n == 10):
			       : 		self.lightOff()
			       : 	#Turn on lights.
			       : 	elif (n == 0):
			       : 		self.lightOn()
			       : 	elif (n == 1):
			       : 		self.m_save = True
			       : 	#Start hitting.
			       : 	elif (n == 2):
			       : 		if (self.m_numHits < 2):
			       : 			self.m_pushDir = -1
			       : 			self.m_pushTime = 1
			       : 		else:
			       : 			self.m_pushDir = -2
			       : 			self.m_pushTime = 0.5
			       : 			self.setAlarm(1, 4)
			       : 
			       : 		self.setAlarm(1.4, 3)
			       : 	#One hit.
			       : 	elif (n == 3):
			       : 		self.m_numHits += 1
			       : 		
			       : 		if (self.m_numHits == 3):
			       : 			return
			       : 		elif (self.m_numHits == 2):
			       : 			Ngf.destroyObject(Ngf.getObject("stopBrush"))
			       : 		
			       : 		self.m_pushDir = 1
			       : 		self.m_pushTime = 0.5
			       : 		self.setAlarm(1, 2)
			       : 	#Go into thirdperson.
			       : 	elif (n == 4):
			       : 		GraLL2.cameraHandler.p_currState = GraLL2.CameraMode.ThirdPerson
			       : 		GraLL2.cameraHandler.p_rotationFactor = 2
			       : 		GraLL2.cameraHandler.p_movementFactor = 1
			       : 		self.setAlarm(4, 5)
			       : 		self.m_save = True
			       : 	#Gain control! :D
			       : 	elif (n == 5):
			       : 		self.p_underControl = True
			       : 		GraLL2.cameraHandler.p_rotationFactor = 0
			       : 		GraLL2.cameraHandler.p_movementFactor = 4	
			       : 		
			       : 		GraLL2.showMessage("%s, %s, %s, %s - Move forward, backward, left and right respectively" % (GraLL2.getControl("forward"), GraLL2.getControl("backward"), GraLL2.getControl("left"), GraLL2.getControl("right")), 6)
			       : 		
			       : def collide(self, other):
			       : 	if (self.m_numHits < 2):
			       : 		if (other.getName() == "stopBrush"):
			       : 			if (self.m_colTime <= 0):
			       : 				if (self.m_numHits == 0):
			       : 					self.v_hitSound1.setGain(0.6)
			       : 				else:
			       : 					self.v_hitSound1.setGain(0.9)
			       : 						
			       : 				self.v_hitSound1.setPitch(random.uniform(0.8, 1.1))
			       : 				self.v_hitSound1.play()
			       : 				self.m_colTime = 1.2
			       : 				
			       : 				GraLL2.cameraHandler.shake(Ngf.Radian(0.02), 0.3, 0.001)
			       : 	elif (other.getName() == "glass"):
			       : 		if (self.m_colTime <= 0):
			       : 			self.v_hitSound1.setGain(1.2)
			       : 			self.v_hitSound1.setPitch(random.uniform(0.8, 1.1))
			       : 			self.v_hitSound1.play()
			       : 	
			       : 			self.v_hitSound2.play()
			       : 			
			       : 			self.m_colTime = 50
			       : 			
			       : 			GraLL2.cameraHandler.shake(Ngf.Radian(0.03), 0.4, 0.0005)
			       : 
		}
	}
	object
	{
		type RigidBody
		name glass
		position 9.500000 0.650000 11.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			mass 2
			friction 0.5
			restitution 0
			linearDamping 0
			angularDamping 0
			brushMeshFile Awakening_b12.mesh
			shape box
		}
	}
	object
	{
		type Light
		name noname
		position -7.500000 6.400000 11.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			lightType point
			colour 0.9 0.9 0.9
			attenuation 30 1 0.1 0.01
		}
	}
	object
	{
		type Light
		name noname
		position 10.500000 5.500000 11.500000
		rotation 0.707107 0.707107 0.000000 -0.000000

		properties
		{
			dimensions 3
			lightType spot
			colour 0.8 0.8 0.8
			attenuation 20 1 0.1 0.05
			innerAngle 10
			outerAngle 85
		}
	}
	object
	{
		type CameraHandler
		name noname
		position 10.500000 24.835087 11.962250
		rotation 0.707107 -0.707107 0.000000 -0.000000

		properties
		{
			dimensions 3
			script : import Ngf
			       : 
			       : def init(self):
			       : 	GraLL2.controller.m_splineTime = 20
			       : 
			       : def create(self):
			       : 	self.targetPlayer()
			       : 	GraLL2.fadeOutColour(Ngf.ColourValue.White, 2.2)
			       : 	
			       : 	self.beginSpline(30)
			       : 	self.addSplinePoint(0, self.getPosition())
			       : 	self.addSplinePoint(4, Ngf.getObject("camPoint1").getPosition())
			       : 	self.addSplinePoint(1.2, Ngf.getObject("camPoint2").getPosition())
			       : 	self.addSplinePoint(1, Ngf.getObject("camPoint3").getPosition())
			       : 	self.addSplinePoint(1, Ngf.getObject("camPoint4").getPosition())
			       : 	self.addSplinePoint(1, Ngf.getObject("camPoint5").getPosition())
			       : 	self.addSplinePoint(1, Ngf.getObject("camPoint6").getPosition())
			       : 	self.addSplinePoint(1, Ngf.getObject("camPoint7").getPosition())
			       : 	self.addSplinePoint(1, Ngf.getObject("camPoint8").getPosition())
			       : 	self.addSplinePoint(1.8, Ngf.getObject("camPoint9").getPosition())
			       : 	self.addSplinePoint(4, Ngf.getObject("camPoint10").getPosition())
			       : 	self.addSplinePoint(10, Ngf.getObject("camPoint11").getPosition())
			       : 	self.endSpline()
			       : 	
			       : 	self.p_currState = GraLL2.CameraMode.Spline
		}
	}
	object
	{
		type Point
		name camPoint1
		position 10.500000 6.626955 11.801653
		rotation 1.000000 0.000000 0.000000 -0.000000
	}
	object
	{
		type Trigger
		name noname
		position -1.800000 1.500000 11.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 3
			brushMeshFile Awakening_b13.mesh
			script : import GraLL2
			       : 
			       : def collide(self, other):
			       : 	if (other.hasFlag("Player")):
			       : 		GraLL2.showMessage("""Mouse left/right - Turn 
			       : Right mouse button + Mouse up/down - Change view height""", 7)
			       : 		Ngf.destroyObject(self)
		}
	}
	object
	{
		type Empty
		name noname
		position -7.500000 3.500000 -11.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			dimensions 1
			scriptFile Prefab_AmbientSound.pyo
			soundFile AmbientSpooky.wav
			loop 1
			stream 1
			attenuation -1 5 5
			initPlay 1
			gain 3.638671875
		}
	}
}

