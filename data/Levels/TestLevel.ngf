ngflevel TestLevel
{
	object
	{
		type Light
		name noname
		position -13.550045 0.695267 10.550045
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			lightType point
			colour 0.6 0.3 0.3
			attenuation 100 0 0.5 0
		}
	}
	object
	{
		type StaticBrush
		name thirdWall
		position -2.500000 0.569699 -9.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			brushMeshFile TestLevel_b0.mesh
			dimension1 yes
			dimension2 no
		}
	}
	object
	{
		type StaticBrush
		name noname
		position -2.500000 0.569699 -5.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			brushMeshFile TestLevel_b1.mesh
			dimension1 no
			dimension2 yes
		}
	}
	object
	{
		type StaticBrush
		name firstWall
		position -2.500000 0.569699 -1.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			brushMeshFile TestLevel_b2.mesh
			dimension1 yes
			dimension2 no
		}
	}
	object
	{
		type StaticBrush
		name noname
		position -0.500000 0.569699 -0.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			brushMeshFile TestLevel_b3.mesh
			dimension1 yes
			dimension2 yes
		}
	}
	object
	{
		type Player
		name player1
		position 10.919084 0.490549 1.500000
		rotation 0.707107 0.000000 0.707107 -0.000000

		properties
		{
			dimension1 yes
			dimension2 no
			script : import Ngf
			       : 
			       : def create(self):
			       : 	self.setLinearVelocity(self.getOrientation() * Ngf.Vector3(0,0,-5))
			       : 	self.setAngularVelocity(self.getOrientation() * Ngf.Vector3(-1,0,0))
			       : 	self.p_underControl = False
			       : #	self.m_time = 0
			       : 	
			       : 	def lamb():
			       : 		self.p_underControl = True
			       : 	self.addTask(5.5, lamb)
			       : 	
			       : def utick(self, elapsed):
			       : 	pass
			       : #	if (self.m_time < 5.5):
			       : #		self.m_time += elapsed
			       : #	else:
			       : #		self.p_underControl = True
			       : 
		}
	}
	object
	{
		type Light
		name noname
		position -2.500000 2.179168 5.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			lightType point
			colour 0.6 0.6 0.6
			attenuation 100 1 0.01 0.01
		}
	}
	object
	{
		type CameraHandler
		name cam
		position 6.848991 5.950529 7.955254
		rotation 0.942108 -0.247786 -0.218479 -0.057463

		properties
		{
			script : import Ngf
			       : 
			       : def create(self):
			       : 	self.p_currState = 1
			       : 	self.p_movementFactor = 4
			       : 	self.p_rotationFactor = 0
			       : 
			       : #	self.m_time = 0
			       : 	
			       : 	def lamb():
			       : 		self.setTarget(Ngf.getObject("thirdWall"))
			       : 		self.p_rotationFactor = 1.5
			       : 	self.addTask(1, lamb)
			       : 	
			       : 		
			       : 	def lamb2():
			       : 		self.targetPlayer(Ngf.getObject("player1"))
			       : 	self.addTask(3, lamb2)
			       : 		
			       : 	def lamb3():
			       : 		self.p_currState = 2
			       : 		self.p_rotationFactor = 0
			       : 	self.addTask(5, lamb3)
			       : 
			       : def utick(self, elapsed):
			       : 	pass
			       : #	self.m_time += elapsed
			       : 	
			       : #	if (self.m_time > 1 and self.m_time < 2):
			       : #		self.setTarget(Ngf.getObject("thirdWall"))
			       : #		self.p_rotationFactor = 1.5
			       : 		
			       : #	if (self.m_time > 3 and self.m_time < 4):
			       : #		self.targetPlayer(Ngf.getObject("player1"))
			       : 		
			       : #	if (self.m_time > 5 and self.m_time < 6):
			       : #		self.p_currState = 2
			       : #		self.p_rotationFactor = 0
			       : 
		}
	}
	object
	{
		type Light
		name noname
		position 12.500000 2.753613 -12.500000
		rotation 1.000000 0.000000 0.000000 -0.000000

		properties
		{
			lightType point
			colour 0.2 0.2 0.5
			attenuation 200 0 0.5 0
		}
	}
}

